同学的问题：
	之前他的环境已经 OK 了，不知道为什么又不行了,

cmake管理的构建，有一个先天的优势，我们无论怎么操作，都不会污染我们的源码目录结构。


mkdir build
cd build // 后面所有的事情都发生在这个 build 目录里面，包含编译的产出物(在你不作特殊设置的情况)
cmake ..

cache更新，历史值没有清除....

行业术语：删build

cmake .. 出错了，有红色 ....
再来一次，上一次虽然失败，但是更新了 cache, 所以第二次成功。（cmake 设计的问题，相信随着版本的迭代，可能会解决)

build文件生成的过程中，要去网络上下载文件，depends，（这一步失败的概率很大）

--------------------------------------------

opencv 的安装是源代码安装，其中一个重要的原因，就是你可以跳转到代码(可以学习源码)

uchar, 8u

你新入一个团队，接手一个大的工程C++，你的第一要务是理解业务，从业务里抽出一条主线，
根据这个主线去看代码里面的关键数据结构，其实就是类的层面，你要做的事关联到哪几个类，再深入进去看，（数据成员），行为得以实现的载体就是数据成员。


RGB

读取一张图片 -> BGR -> RGB

---------------------------------------------

图片是角度偏差的，opencv (点，度数)，梳理() -> 

有一个目录，按照一个固定的规律去命名这些文件

Python，批量重命名的工具体要求

行为录像