作业：

类的设计，你能够去抽象和提取一些公共的基数应该具有的属性

调用父类的接口，public, 父类中是公开

base_class::getSalary() + sub_class_obj.cumstom_salary

-------------------------------------------------------

virtual(多态的机制)

-------------------------------------------------------


1. class 对象的内存在求它占用的内存空间的时候呢，struct是一回事，存在字节对齐的问题

2. 类的继承，继承这个概念普遍存在于各类的社会现象中，自然现象中，理解它同学们不存在问题，
   但是要理解为什么当初引入它到 C++中，这是一个我觉得很多初级的开发人员都没有搞明白的问题。

   复用，提高人效。

   原来已经有一个类，classA, 但是我们发现它只能满足我们一部分的需求，classB

   bizC : public classA,  public classB {
   		classA::xxxx
   		classB::xxxx
   }



--------------------------------------------------------

Java 接口用另一种方式实现了类似于多继承的效果

--------------------------------------------------------

继承对于子类内存结构的影响和作用

菱形继承不是我们人为去做，相反它是我们想避免的一种场景。

逻辑上不完整, 逻辑上应该只有一个

--------------------------------------------------------

C++不作过多的假设，像Python，C#，Java会替程序员做很多的假设，会做很多事情。

print()这个函数在两个父类中都是存在，当进行多继承的时候，它们只是巧合在名字相同
但是功能未来相同，所以要如实把他们保存下来，是不是就把功能给丢失了，这是一个非常
严重的问题：正确性丢了，没有得到保证。

--------------------------------------------------------

