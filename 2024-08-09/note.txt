学生，类型它应该有各种属性，

并不比你去做传统算法的题目, 现在大家出去面向企业 机会

必要条件，充分条件

面向对象编程 = OOP => C++, Java.

OOP based on OOD (面向对象设计)，各种类的设计，(UML) 

已经有用例的情况，反向去设计和实现。

——————————————————————————————————————————————————

整体规划的时间是 1 的话，0.6 的时间被前期的虚求对接给花费了，0.1～0.2，0.2 是交付和返工。
大家看到了没有，真正的写代码的时间 1/10.

成员变量，成员方法

成员变量 -> (发动机内部的机器部件)
成员方法 -> (对外提供的操作控件，用户界面)

--------------------------------------
空调，电视控制器上面的按键非常多，以小米为代表简洁。

OOD 这个度要怎么把握 -> 多思考 -> 经验

--------------------------------------
构造函数和析构函数

类，它没有构造函数?  必然有
类，它没有析构函数？ 必然有

类，可不可以没有成员变量？可以没有

--------------------------------------
最小作用域原则
--------------------------------------

C++ -> this
Python -> self

x86_64, M1, M2, M3, RISC-V, arm.


--------------------------------------

函数中的static 局部变量，只会初始化一次

静态成员变量和成员函数它不属于对象，而是类级别的，所以它里面没有传递对象的地址，也就是 this指针

申明，count，并没有分配内容，定义

Python 已经写完了，而且看起来也不错，最后是运行的时候报错的，线上出了问题。

测试（用各种已有的历史的场景去跑去测试），丰富测试场景。GC。

